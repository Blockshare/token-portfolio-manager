{"version":3,"sources":["../../../src/lib/tooltip/OHLCTooltip.js"],"names":["OHLCTooltip","props","renderSVG","bind","moreProps","className","textFill","labelFill","onClick","fontFamily","fontSize","displayValuesFor","xDisplayFormat","accessor","volumeFormat","ohlcFormat","chartConfig","width","height","displayXAccessor","currentItem","displayDate","open","high","low","close","volume","item","originProp","origin","x","y","propTypes","string","func","oneOfType","array","number","defaultProps","d","date"],"mappings":"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","file":"OHLCTooltip.js","sourcesContent":["\"use strict\";\n\nimport React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\nimport displayValuesFor from \"./displayValuesFor\";\nimport GenericChartComponent from \"../GenericChartComponent\";\n\nimport { isDefined, functor } from \"../utils\";\nimport ToolTipText from \"./ToolTipText\";\nimport ToolTipTSpanLabel from \"./ToolTipTSpanLabel\";\n\nclass OHLCTooltip extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.renderSVG = this.renderSVG.bind(this);\n\t}\n\trenderSVG(moreProps) {\n\t\tconst { className, textFill, labelFill } = this.props;\n\t\tconst { onClick, fontFamily, fontSize } = this.props;\n\t\tconst { displayValuesFor } = this.props;\n\t\tconst { xDisplayFormat, accessor, volumeFormat, ohlcFormat } = this.props;\n\n\t\tconst { chartConfig: { width, height } } = moreProps;\n\t\tconst { displayXAccessor } = moreProps;\n\n\t\tconst currentItem = displayValuesFor(this.props, moreProps);\n\n\t\tlet displayDate, open, high, low, close, volume;\n\t\tdisplayDate = open = high = low = close = volume = \"n/a\";\n\n\t\tif (isDefined(currentItem)\n\t\t\t\t&& isDefined(accessor(currentItem))) {\n\n\t\t\tconst item = accessor(currentItem);\n\t\t\tvolume = isDefined(item.volume)\n\t\t\t\t? volumeFormat(item.volume)\n\t\t\t\t: \"n/a\";\n\n\t\t\tdisplayDate = xDisplayFormat(displayXAccessor(item));\n\t\t\topen = ohlcFormat(item.open);\n\t\t\thigh = ohlcFormat(item.high);\n\t\t\tlow = ohlcFormat(item.low);\n\t\t\tclose = ohlcFormat(item.close);\n\t\t}\n\t\tconst { origin: originProp } = this.props;\n\t\tconst origin = functor(originProp);\n\t\tconst [x, y] = origin(width, height);\n\n\t\treturn (\n\t\t\t<g className={`react-stockcharts-tooltip-hover ${className}`}\n\t\t\t\ttransform={`translate(${ x }, ${ y })`} onClick={onClick}>\n\t\t\t\t<ToolTipText x={0} y={0}\n\t\t\t\t\tfontFamily={fontFamily} fontSize={fontSize}>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label\" x={0} dy=\"5\">Date: </ToolTipTSpanLabel>\n\t\t\t\t\t<tspan key=\"value\" fill={textFill}>{displayDate}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label_O\"> O: </ToolTipTSpanLabel><tspan key=\"value_O\" fill={textFill}>{open}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label_H\"> H: </ToolTipTSpanLabel><tspan key=\"value_H\" fill={textFill}>{high}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label_L\"> L: </ToolTipTSpanLabel><tspan key=\"value_L\" fill={textFill}>{low}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label_C\"> C: </ToolTipTSpanLabel><tspan key=\"value_C\" fill={textFill}>{close}</tspan>\n\t\t\t\t\t<ToolTipTSpanLabel fill={labelFill} key=\"label_Vol\"> Vol: </ToolTipTSpanLabel><tspan key=\"value_Vol\" fill={textFill}>{volume}</tspan>\n\t\t\t\t</ToolTipText>\n\t\t\t</g>\n\t\t);\n\t}\n\trender() {\n\t\treturn <GenericChartComponent\n\t\t\tclip={false}\n\t\t\tsvgDraw={this.renderSVG}\n\t\t\tdrawOn={[\"mousemove\"]}\n\t\t/>;\n\t}\n}\n\nOHLCTooltip.propTypes = {\n\tclassName: PropTypes.string,\n\taccessor: PropTypes.func,\n\txDisplayFormat: PropTypes.func,\n\tohlcFormat: PropTypes.func,\n\torigin: PropTypes.oneOfType([\n\t\tPropTypes.array,\n\t\tPropTypes.func\n\t]),\n\tfontFamily: PropTypes.string,\n\tfontSize: PropTypes.number,\n\tonClick: PropTypes.func,\n\tdisplayValuesFor: PropTypes.func,\n\tvolumeFormat: PropTypes.func,\n\ttextFill: PropTypes.string,\n\tlabelFill: PropTypes.string,\n};\n\nOHLCTooltip.defaultProps = {\n\taccessor: (d) => { return { date: d.date, open: d.open, high: d.high, low: d.low, close: d.close, volume: d.volume }; },\n\txDisplayFormat: timeFormat(\"%Y-%m-%d\"),\n\tvolumeFormat: format(\".4s\"),\n\tohlcFormat: format(\".2f\"),\n\tdisplayValuesFor: displayValuesFor,\n\torigin: [0, 0],\n};\n\nexport default OHLCTooltip;\n"]}