{"version":3,"sources":["../../../src/lib/calculator/heikinAshi.js"],"names":["source","calculator","data","algorithm","windowSize","undefinedValue","open","high","low","close","accumulator","prev","now","Math","max","min","x","arguments","length"],"mappings":"AAAA;;;;;;;;kBAIe,YAAW;;AAEzB,KAAIA,wBAAJ;;AAEA,UAASC,UAAT,CAAoBC,IAApB,EAA0B;AACzB,MAAMC,YAAY,kCAChBC,UADgB,CACL,CADK,EAEhBC,cAFgB,CAED,gBAAgC;AAAA,OAA7BC,IAA6B,QAA7BA,IAA6B;AAAA,OAAvBC,IAAuB,QAAvBA,IAAuB;AAAA,OAAjBC,GAAiB,QAAjBA,GAAiB;AAAA,OAAZC,KAAY,QAAZA,KAAY;;AAC/CA,WAAQ,CAACH,OAAOC,IAAP,GAAcC,GAAd,GAAoBC,KAArB,IAA8B,CAAtC;AACA,UAAO,EAAEH,UAAF,EAAQC,UAAR,EAAcC,QAAd,EAAmBC,YAAnB,EAAP;AACA,GALgB,EAMhBC,WANgB,CAMJ,iBAAiB;AAAA;AAAA,OAAfC,IAAe;AAAA,OAATC,GAAS;;AAC7B;AACA,OAAMH,QAAQ,CAACG,IAAIN,IAAJ,GAAWM,IAAIL,IAAf,GAAsBK,IAAIJ,GAA1B,GAAgCI,IAAIH,KAArC,IAA8C,CAA5D;AACA,OAAMH,OAAO,CAACK,KAAKL,IAAL,GAAYK,KAAKF,KAAlB,IAA2B,CAAxC;AACA,OAAMF,OAAOM,KAAKC,GAAL,CAASR,IAAT,EAAeM,IAAIL,IAAnB,EAAyBE,KAAzB,CAAb;AACA,OAAMD,MAAMK,KAAKE,GAAL,CAAST,IAAT,EAAeM,IAAIJ,GAAnB,EAAwBC,KAAxB,CAAZ;AACA,UAAO,EAAEH,UAAF,EAAQC,UAAR,EAAcC,QAAd,EAAmBC,YAAnB,EAAP;AACA,GAbgB,CAAlB;;AAeA,SAAON,UAAUD,IAAV,CAAP;AACA;AACDD,YAAWD,MAAX,GAAoB,UAASgB,CAAT,EAAY;AAC/B,MAAI,CAACC,UAAUC,MAAf,EAAuB;AACtB,UAAOlB,MAAP;AACA;AACDA,WAASgB,CAAT;AACA,SAAOf,UAAP;AACA,EAND;;AAQA,QAAOA,UAAP;AACA,C;;AAjCD","file":"heikinAshi.js","sourcesContent":["\"use strict\";\n\nimport { mappedSlidingWindow, identity } from \"../utils\";\n\nexport default function() {\n\n\tlet source = identity;\n\n\tfunction calculator(data) {\n\t\tconst algorithm = mappedSlidingWindow()\n\t\t\t.windowSize(2)\n\t\t\t.undefinedValue(({ open, high, low, close }) => {\n\t\t\t\tclose = (open + high + low + close) / 4;\n\t\t\t\treturn { open, high, low, close };\n\t\t\t})\n\t\t\t.accumulator(([prev, now]) => {\n\t\t\t\t// console.log(prev, now);\n\t\t\t\tconst close = (now.open + now.high + now.low + now.close) / 4;\n\t\t\t\tconst open = (prev.open + prev.close) / 2;\n\t\t\t\tconst high = Math.max(open, now.high, close);\n\t\t\t\tconst low = Math.min(open, now.low, close);\n\t\t\t\treturn { open, high, low, close };\n\t\t\t});\n\n\t\treturn algorithm(data);\n\t}\n\tcalculator.source = function(x) {\n\t\tif (!arguments.length) {\n\t\t\treturn source;\n\t\t}\n\t\tsource = x;\n\t\treturn calculator;\n\t};\n\n\treturn calculator;\n}"]}