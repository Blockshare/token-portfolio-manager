{"version":3,"sources":["../../../../src/lib/interactive/utils.js"],"names":["isNotDefined","isDefined","mapObject","getValueFromOverride","override","index","key","defaultValue","terminate","setState","current","saveNodeType","type","node","nodes","isHoverForInteractiveType","interactiveType","moreProps","selecedNodes","map","isHover","interactive","props","t","idx","selected","hovering","reduce","a","b","getMouseXY","ox","oy","Array","isArray","mouseXY","x","y","getMorePropsForChart","chartId","chartConfigList","chartConfig","filter","each","id","origin"],"mappings":";;;;AAAA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,SAAlC,QAAmD,UAAnD;;AAEA,OAAO,SAASC,oBAAT,CAA8BC,QAA9B,EAAwCC,KAAxC,EAA+CC,GAA/C,EAAoDC,YAApD,EAAkE;AACxE,KAAIN,UAAUG,QAAV,KAAuBA,SAASC,KAAT,KAAmBA,KAA9C,EACC,OAAOD,SAASE,GAAT,CAAP;AACD,QAAOC,YAAP;AACA;;AAED,OAAO,SAASC,SAAT,GAAqB;AAC3B,MAAKC,QAAL,CAAc;AACbC,WAAS,IADI;AAEbN,YAAU;AAFG,EAAd;AAIA;;AAED,OAAO,SAASO,YAAT,CAAsBC,IAAtB,EAA4B;AAAA;;AAClC,QAAO,gBAAQ;AACd,MAAIZ,aAAaa,IAAb,KAAsBZ,UAAU,MAAKa,KAAL,CAAWF,IAAX,CAAV,CAA1B,EAAuD;AACtD,UAAO,MAAKE,KAAL,CAAWF,IAAX,CAAP;AACA,GAFD,MAEO;AACN,SAAKE,KAAL,CAAWF,IAAX,IAAmBC,IAAnB;AACA;AACD;AACA,EAPD;AAQA;AACD,OAAO,SAASE,yBAAT,CAAmCC,eAAnC,EAAoD;AAC1D,QAAO,UAASC,SAAT,EAAoB;AAAE;;AAE5B,MAAIhB,UAAU,KAAKa,KAAf,CAAJ,EAA2B;AAC1B,OAAMI,eAAe,KAAKJ,KAAL,CACnBK,GADmB,CACf;AAAA,WAAQN,KAAKO,OAAL,CAAaH,SAAb,CAAR;AAAA,IADe,CAArB;AAEA,OAAMI,cAAc,KAAKC,KAAL,CAAWN,eAAX,EAA4BG,GAA5B,CAAgC,UAACI,CAAD,EAAIC,GAAJ,EAAY;AAC/D,wBACID,CADJ;AAECE,eAAUP,aAAaM,GAAb;AAFX;AAIA,IALmB,CAApB;AAMA,UAAOH,WAAP;AACA;AACD,EAbD;AAcA;;AAED,OAAO,SAASD,OAAT,CAAiBH,SAAjB,EAA4B;AAClC,KAAMS,WAAWxB,UAAU,KAAKY,KAAf,EAAsB;AAAA,SAAQD,KAAKO,OAAL,CAAaH,SAAb,CAAR;AAAA,EAAtB,EACfU,MADe,CACR,UAACC,CAAD,EAAIC,CAAJ,EAAU;AACjB,SAAOD,KAAKC,CAAZ;AACA,EAHe,CAAjB;AAIA,QAAOH,QAAP;AACA;;AAED,SAASI,UAAT,CAAoBb,SAApB,QAAyC;AAAA;AAAA,KAATc,EAAS;AAAA,KAALC,EAAK;;AACxC,KAAIC,MAAMC,OAAN,CAAcjB,UAAUkB,OAAxB,CAAJ,EAAsC;AAAA,0CACTlB,SADS,CAC7BkB,OAD6B;AAAA,MACnBC,CADmB;AAAA,MAChBC,CADgB;;AAErC,MAAMF,UAAU,CACfC,IAAIL,EADW,EAEfM,IAAIL,EAFW,CAAhB;AAIA,SAAOG,OAAP;AACA;AACD,QAAOlB,UAAUkB,OAAjB;AACA;;AAED,OAAO,SAASG,oBAAT,CAA8BrB,SAA9B,EAAyCsB,OAAzC,EAAkD;AAAA,KACnCC,eADmC,GACfvB,SADe,CAChDwB,WADgD;;AAExD,KAAMA,cAAcD,gBAClBE,MADkB,CACX;AAAA,SAAQC,KAAKC,EAAL,KAAYL,OAApB;AAAA,EADW,EACkB,CADlB,CAApB;;AAFwD,KAKhDM,MALgD,GAKrCJ,WALqC,CAKhDI,MALgD;;AAMxD,KAAMV,UAAUL,WAAWb,SAAX,EAAsB4B,MAAtB,CAAhB;AACA,qBACI5B,SADJ;AAECwB,0BAFD;AAGCN;AAHD;AAKA","file":"utils.js","sourcesContent":["import { isNotDefined, isDefined, mapObject } from \"../utils\";\n\nexport function getValueFromOverride(override, index, key, defaultValue) {\n\tif (isDefined(override) && override.index === index)\n\t\treturn override[key];\n\treturn defaultValue;\n}\n\nexport function terminate() {\n\tthis.setState({\n\t\tcurrent: null,\n\t\toverride: null,\n\t});\n}\n\nexport function saveNodeType(type) {\n\treturn node => {\n\t\tif (isNotDefined(node) && isDefined(this.nodes[type])) {\n\t\t\tdelete this.nodes[type];\n\t\t} else {\n\t\t\tthis.nodes[type] = node;\n\t\t}\n\t\t// console.error(this.nodes)\n\t};\n}\nexport function isHoverForInteractiveType(interactiveType) {\n\treturn function(moreProps) { // this has to be function as it is bound to this\n\n\t\tif (isDefined(this.nodes)) {\n\t\t\tconst selecedNodes = this.nodes\n\t\t\t\t.map(node => node.isHover(moreProps));\n\t\t\tconst interactive = this.props[interactiveType].map((t, idx) => {\n\t\t\t\treturn {\n\t\t\t\t\t...t,\n\t\t\t\t\tselected: selecedNodes[idx]\n\t\t\t\t};\n\t\t\t});\n\t\t\treturn interactive;\n\t\t}\n\t};\n}\n\nexport function isHover(moreProps) {\n\tconst hovering = mapObject(this.nodes, node => node.isHover(moreProps))\n\t\t.reduce((a, b) => {\n\t\t\treturn a || b;\n\t\t});\n\treturn hovering;\n}\n\nfunction getMouseXY(moreProps, [ox, oy]) {\n\tif (Array.isArray(moreProps.mouseXY)) {\n\t\tconst { mouseXY: [x, y] } = moreProps;\n\t\tconst mouseXY = [\n\t\t\tx - ox,\n\t\t\ty - oy\n\t\t];\n\t\treturn mouseXY;\n\t}\n\treturn moreProps.mouseXY;\n}\n\nexport function getMorePropsForChart(moreProps, chartId) {\n\tconst { chartConfig: chartConfigList } = moreProps;\n\tconst chartConfig = chartConfigList\n\t\t.filter(each => each.id === chartId)[0];\n\n\tconst { origin } = chartConfig;\n\tconst mouseXY = getMouseXY(moreProps, origin);\n\treturn {\n\t\t...moreProps,\n\t\tchartConfig,\n\t\tmouseXY,\n\t};\n}\n"]}