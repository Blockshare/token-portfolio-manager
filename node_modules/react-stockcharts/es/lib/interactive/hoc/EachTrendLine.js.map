{"version":3,"sources":["../../../../../src/lib/interactive/hoc/EachTrendLine.js"],"names":["React","Component","PropTypes","ascending","d3Ascending","noop","saveNodeType","isHover","getCurrentItem","StraightLine","ClickableCircle","HoverTextNearMouse","EachTrendLine","props","handleEdge1Drag","bind","handleEdge2Drag","handleLineDragStart","handleLineDrag","handleHover","nodes","state","hover","x1Value","y1Value","x2Value","y2Value","dragStart","moreProps","index","onDrag","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","x1","y1","x2","y2","dx","dy","newX1Value","newY1Value","invert","newX2Value","newY2Value","getNewXY","hovering","setState","type","stroke","strokeWidth","strokeOpacity","r","edgeStrokeWidth","edgeFill","edgeStroke","edgeInteractiveCursor","lineInteractiveCursor","hoverText","selected","onDragComplete","hoverTextEnabled","enable","restHoverTextProps","plotData","mouseY","currentItem","x","domain","slice","sort","small","big","y","newY","Math","min","max","propTypes","any","isRequired","number","oneOf","func","onEdge1Drag","onEdge2Drag","onSelect","onUnSelect","defaultClassName","string","bool","object","defaultProps"],"mappings":"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","file":"EachTrendLine.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { ascending as d3Ascending } from \"d3-array\";\nimport { noop } from \"../../utils\";\nimport { saveNodeType, isHover } from \"../utils\";\nimport { getCurrentItem } from \"../../utils/ChartDataUtil\";\n\nimport StraightLine from \"../components/StraightLine\";\nimport ClickableCircle from \"../components/ClickableCircle\";\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\n\nclass EachTrendLine extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\n\t\tthis.handleEdge2Drag = this.handleEdge2Drag.bind(this);\n\t\tthis.handleLineDragStart = this.handleLineDragStart.bind(this);\n\t\tthis.handleLineDrag = this.handleLineDrag.bind(this);\n\n\t\tthis.handleHover = this.handleHover.bind(this);\n\n\t\tthis.isHover = isHover.bind(this);\n\t\tthis.saveNodeType = saveNodeType.bind(this);\n\t\tthis.nodes = {};\n\n\t\tthis.state = {\n\t\t\thover: false,\n\t\t};\n\t}\n\thandleLineDragStart() {\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t} = this.props;\n\n\t\tthis.dragStart = {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t};\n\t}\n\thandleLineDrag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t\tx2Value, y2Value,\n\t\t} = this.dragStart;\n\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\n\t\tconst { startPos, mouseXY } = moreProps;\n\n\t\tconst x1 = xScale(x1Value);\n\t\tconst y1 = yScale(y1Value);\n\t\tconst x2 = xScale(x2Value);\n\t\tconst y2 = yScale(y2Value);\n\n\t\tconst dx = startPos[0] - mouseXY[0];\n\t\tconst dy = startPos[1] - mouseXY[1];\n\n\t\tconst newX1Value = xAccessor(getCurrentItem(xScale, xAccessor, [x1 - dx, y1 - dy], fullData));\n\t\tconst newY1Value = yScale.invert(y1 - dy);\n\t\tconst newX2Value = xAccessor(getCurrentItem(xScale, xAccessor, [x2 - dx, y2 - dy], fullData));\n\t\tconst newY2Value = yScale.invert(y2 - dy);\n\n\t\tonDrag(index, {\n\t\t\tx1Value: newX1Value,\n\t\t\ty1Value: newY1Value,\n\t\t\tx2Value: newX2Value,\n\t\t\ty2Value: newY2Value,\n\t\t});\n\t}\n\thandleEdge1Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx2Value, y2Value,\n\t\t} = this.props;\n\n\t\tconst [x1Value, y1Value] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t});\n\t}\n\thandleEdge2Drag(moreProps) {\n\t\tconst { index, onDrag } = this.props;\n\t\tconst {\n\t\t\tx1Value, y1Value,\n\t\t} = this.props;\n\n\t\tconst [x2Value, y2Value] = getNewXY(moreProps);\n\n\t\tonDrag(index, {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t});\n\t}\n\thandleHover(moreProps) {\n\t\tif (this.state.hover !== moreProps.hovering) {\n\t\t\tthis.setState({\n\t\t\t\thover: moreProps.hovering\n\t\t\t});\n\t\t}\n\t}\n\trender() {\n\t\tconst {\n\t\t\tx1Value,\n\t\t\ty1Value,\n\t\t\tx2Value,\n\t\t\ty2Value,\n\t\t\ttype,\n\t\t\tstroke,\n\t\t\tstrokeWidth,\n\t\t\tstrokeOpacity,\n\t\t\tr,\n\t\t\tedgeStrokeWidth,\n\t\t\tedgeFill,\n\t\t\tedgeStroke,\n\t\t\tedgeInteractiveCursor,\n\t\t\tlineInteractiveCursor,\n\t\t\thoverText,\n\t\t\tselected,\n\n\t\t\tonDragComplete,\n\t\t} = this.props;\n\t\tconst { hover } = this.state;\n\n\t\t// console.log(\"SELECTED ->\", selected);\n\t\tconst { enable: hoverTextEnabled, ...restHoverTextProps } = hoverText;\n\n\t\treturn <g>\n\t\t\t<StraightLine\n\t\t\t\tref={this.saveNodeType(\"line\")}\n\t\t\t\tselected={selected || hover}\n\t\t\t\tonHover={this.handleHover}\n\t\t\t\tonUnHover={this.handleHover}\n\t\t\t\tx1Value={x1Value}\n\t\t\t\ty1Value={y1Value}\n\t\t\t\tx2Value={x2Value}\n\t\t\t\ty2Value={y2Value}\n\t\t\t\ttype={type}\n\t\t\t\tstroke={stroke}\n\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\n\t\t\t\tstrokeOpacity={strokeOpacity}\n\t\t\t\tinteractiveCursorClass={lineInteractiveCursor}\n\t\t\t\tonDragStart={this.handleLineDragStart}\n\t\t\t\tonDrag={this.handleLineDrag}\n\t\t\t\tonDragComplete={onDragComplete} />\n\t\t\t<ClickableCircle\n\t\t\t\tref={this.saveNodeType(\"edge1\")}\n\t\t\t\tshow={selected || hover}\n\t\t\t\tcx={x1Value}\n\t\t\t\tcy={y1Value}\n\t\t\t\tr={r}\n\t\t\t\tfill={edgeFill}\n\t\t\t\tstroke={edgeStroke}\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\tstrokeOpacity={1}\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\tonDrag={this.handleEdge1Drag}\n\t\t\t\tonDragComplete={onDragComplete} />\n\t\t\t<ClickableCircle\n\t\t\t\tref={this.saveNodeType(\"edge2\")}\n\t\t\t\tshow={selected || hover}\n\t\t\t\tcx={x2Value}\n\t\t\t\tcy={y2Value}\n\t\t\t\tr={r}\n\t\t\t\tfill={edgeFill}\n\t\t\t\tstroke={edgeStroke}\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\n\t\t\t\tstrokeOpacity={1}\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\n\t\t\t\tonDrag={this.handleEdge2Drag}\n\t\t\t\tonDragComplete={onDragComplete} />\n\t\t\t<HoverTextNearMouse\n\t\t\t\tshow={hoverTextEnabled && hover && !selected}\n\t\t\t\t{...restHoverTextProps} />\n\t\t</g>;\n\t}\n}\n\nexport function getNewXY(moreProps) {\n\tconst { xScale, chartConfig: { yScale }, xAccessor, plotData, mouseXY } = moreProps;\n\tconst mouseY = mouseXY[1];\n\n\tconst currentItem = getCurrentItem(xScale, xAccessor, mouseXY, plotData);\n\tconst x = xAccessor(currentItem);\n\tconst [small, big] = yScale.domain().slice().sort(d3Ascending);\n\tconst y = yScale.invert(mouseY);\n\tconst newY = Math.min(Math.max(y, small), big);\n\n\treturn [x, newY];\n}\n\nEachTrendLine.propTypes = {\n\tx1Value: PropTypes.any.isRequired,\n\tx2Value: PropTypes.any.isRequired,\n\ty1Value: PropTypes.any.isRequired,\n\ty2Value: PropTypes.any.isRequired,\n\n\tindex: PropTypes.number,\n\n\ttype: PropTypes.oneOf([\n\t\t\"XLINE\", // extends from -Infinity to +Infinity\n\t\t\"RAY\", // extends to +/-Infinity in one direction\n\t\t\"LINE\", // extends between the set bounds\n\t]).isRequired,\n\n\tonDrag: PropTypes.func.isRequired,\n\tonEdge1Drag: PropTypes.func.isRequired,\n\tonEdge2Drag: PropTypes.func.isRequired,\n\tonDragComplete: PropTypes.func.isRequired,\n\tonSelect: PropTypes.func.isRequired,\n\tonUnSelect: PropTypes.func.isRequired,\n\n\tr: PropTypes.number.isRequired,\n\tstrokeOpacity: PropTypes.number.isRequired,\n\tdefaultClassName: PropTypes.string,\n\n\tselected: PropTypes.bool,\n\n\tstroke: PropTypes.string.isRequired,\n\tstrokeWidth: PropTypes.number.isRequired,\n\tedgeStrokeWidth: PropTypes.number.isRequired,\n\tedgeStroke: PropTypes.string.isRequired,\n\tedgeInteractiveCursor: PropTypes.string.isRequired,\n\tlineInteractiveCursor: PropTypes.string.isRequired,\n\tedgeFill: PropTypes.string.isRequired,\n\thoverText: PropTypes.object.isRequired,\n};\n\nEachTrendLine.defaultProps = {\n\tonDrag: noop,\n\tonEdge1Drag: noop,\n\tonEdge2Drag: noop,\n\tonDragComplete: noop,\n\tonSelect: noop,\n\tonUnSelect: noop,\n\n\tselected: false,\n\n\tedgeStroke: \"#000000\",\n\tedgeFill: \"#FFFFFF\",\n\tedgeStrokeWidth: 2,\n\tr: 5,\n\tstrokeWidth: 1,\n\tstrokeOpacity: 1,\n\thoverText: {\n\t\tenable: false,\n\t}\n};\n\nexport default EachTrendLine;"]}